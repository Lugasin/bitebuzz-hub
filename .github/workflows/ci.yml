name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: e_eats_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      env:
        DB_HOST: localhost
        DB_USER: root
        DB_PASSWORD: root
        DB_NAME: e_eats_test
        FIREBASE_PROJECT_ID: test-project
        FIREBASE_CLIENT_EMAIL: test@example.com
        FIREBASE_PRIVATE_KEY: test-key
      run: npm test
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Deploy to Firebase
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
        channelId: live
    
    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: e-eats-api
        region: us-central1
        image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/e-eats-api:${{ github.sha }}
        credentials: ${{ secrets.GCP_SA_KEY }}
    
    - name: Deploy to Cloud SQL
      run: |
        gcloud sql instances patch e-eats-db \
          --project=${{ secrets.GCP_PROJECT_ID }} \
          --database-version=MYSQL_8_0 \
          --activation-policy=ALWAYS \
          --quiet 